#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
# pin: PA8
# pin: EBBCan: gpio13
# pin: PC12
pin: OrangePi:gpio226
kick_start_time: 0.3
off_below: 0.2
cycle_time: 0.0005


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
# pin: PE5
pin: EBBCan:PA0
max_power: 0.5
shutdown_speed: 0
cycle_time: 0.03
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan_generic filter]
pin: PA6
max_power: 1.0
kick_start_time: 0.1                                             # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.1
cycle_time: 0.07

##  Controller fan - FAN2
[temperature_fan controller_fan_01]
sensor_type: temperature_host #This is what the Pi3's Temperature sensor is known as.
pin: PA4    
max_power: 0.6                # Set this to your fan pin
max_temp: 80.0                # Set below 85C, Pi3+ MCU can be damaged at 85C
target_temp: 65.0             # Set this to your preferred running temperature
min_temp: 0
shutdown_speed: 0.0
kick_start_time: 0.1
off_below: 0.1
max_speed: 1
min_speed: 0.0
control: pid
cycle_time: 0.03
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[temperature_fan controller_fan_02]
sensor_type: temperature_host #This is what the Pi3's Temperature sensor is known as.
pin: PA5    
max_power: 0.6                #Set this to your fan pin
max_temp: 80.0                #Set below 85C, Pi3+ MCU can be damaged at 85C
target_temp: 65.0             #Set this to your preferred running temperature
min_temp: 0
shutdown_speed: 0.0
kick_start_time: 0.10
off_below: 0.1
max_speed: 1
min_speed: 0.0
control: pid
cycle_time: 0.03
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
# [gcode_macro M106]
# description: set fan with manual override and lock option
# rename_existing: M106.1
# gcode:
#   {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
#     M106.1 {rawparams}
#   {% else %}
#     {action_respond_info("M106 update is locked")}
#   {% endif %}
  
[gcode_macro M141]
description: Set temperature of chamber fan
gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}

[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode: SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}

[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode: _SET_FILTER S={printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val}
  
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}