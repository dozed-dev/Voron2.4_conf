[include mainsail.cfg]

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
# serial: /dev/serial/by-id/usb-katapult_stm32h723xx_230017001651303531313638-if00
canbus_uuid: a1695575a0b9
# restart_method: command
##--------------------------------------------------------------------

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: fa9e69040332

[mcu OrangePi]
serial: /tmp/klipper_host_mcu

[temperature_sensor orange_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 25000             # Max 4000
max_z_velocity: 50          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 1000
square_corner_velocity: 5.0

[include stepper.cfg]

#####################################################################
#   Extruder
#####################################################################

##  Heater - HE0
##  Thermistor - T0
 
##  Connected to MOTOR_6

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.5
sense_resistor: 0.110
interpolate: false
stealthchop_threshold: 0

[extruder]
# step_pin: PE2
# dir_pin: PE3
step_pin: EBBCan:PD0
dir_pin: !EBBCan:PD1
enable_pin: !EBBCan:PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
## rotation_distance: 22.5928198   #Bondtech 5mm Drive Gears
# rotation_distance: 22.5928198  # Stealthburner
rotation_distance: 4.799  # Sherpa Micro
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
# gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan:PB13
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors

# sensor_type: PT1000
# sensor_pin: EBBCan:PA3

sensor_type: MAX31865
sensor_pin: EBBCan:PA4
# # spi_software_sclk_pin: EBBCan:PA5
# # spi_software_miso_pin: EBBCan:PA6
# # spi_software_mosi_pin: EBBCan:PA7
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2

# min_temp: 10
max_temp: 310
min_temp: -270

max_power: 1.0
min_extrude_temp: 170
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
##  Try to keep pressure_advance below 1.0
# pressure_advance: 0.05
##  Default is 0.040, leave stock
# pressure_advance_smooth_time: 0.040
# pullup_resistor: 4700
max_extrude_only_distance: 101
max_extrude_cross_section: 999999

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA0
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PB1
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power:1
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[include fan.cfg]

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
pin: ^EBBCan:PB9

#--------------------------------------------------------------------

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: -0.5
y_offset: 25
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.0075
samples_tolerance_retries: 10

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 900

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# # home_xy_position:182,250
# # home_xy_position: 125,125 # Voron Tap
# home_xy_position: 217,250 # Native Probe
# speed:100
# z_hop:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
gantry_corners:
  -60,-10
  310, 320
##  Probe points
points:
  50,25
  50,175
  200,175
  200,25
    
speed: 500
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

[firmware_retraction]
retract_length: 0.75
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 35
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
#unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points: 125,125,20


[neopixel toolhead]
pin: EBBCan:PD3
chain_count: 3
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0
color_order: GRBW

[delayed_gcode setneopixel]
initial_duration: 1
gcode:
    SET_LED LED=toolhead RED=0.039 GREEN=1 BLUE=0.29 INDEX=1 WHITE=0 TRANSMIT=1
    SET_LED LED=toolhead RED=1 GREEN=0 BLUE=1 INDEX=2 WHITE=0 TRANSMIT=1
    SET_LED LED=toolhead RED=1 GREEN=1 BLUE=0 INDEX=3 WHITE=0
     


#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

[save_variables]
filename: ~/printer_data/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg

[include z_calibration.cfg]
[include heater_verify.cfg]

#####################################################################
#   Macros
#####################################################################
[include bed_mesh.cfg]
[include klicky/klicky-probe.cfg]
# [include nozzle_clean.cfg]
[include filament.cfg]

# [gcode_macro LOAD_FILAMENT]
# gcode:
#    G1 X220 Y247 F5000.0           ; Move to purge bucket
#    M83                            ; set extruder to relative
#    G1 E50 F300                    ; load
#    G1 E75 F150                    ; prime nozzle with filament   
#    M82                            ; set extruder to absolute
#    CLEAN_NOZZLE
    
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#    G1 X220 Y247 F5000.0           ; Move to purge bucket
#    M83                            ; set extruder to relative
#    G1 E10 F300                    ; extrude a little to soften tip
#    G1 E-30 F1800                  ; retract some, but not too much or it will jam
#    G1 E-80 F1800
#    M82   
#    CLEAN_NOZZLE

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

### Filament change macro
[gcode_macro G27]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{z}
    G90
    G1 X{x} Y{y} F3000
    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
  {% endif %}

[gcode_macro RETRACT]
gcode:
  {% set f = params.F|default(600)|float %}

  {% if 'D' in params %}
    {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
      {action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{params.D} F{f}
      RESTORE_GCODE_STATE NAME=RETRACT_state MOVE=0
    {% endif %}
  {% endif %}

[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}

[gcode_macro M702]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set p = params.P|default(8)|float %}
  {% set p_f = params.PF|default(180)|float %}
  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    {% if i > 0.0 %}
      G1 E-{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E-{u} F{u_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro M600]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
  {% set default_e = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
    {% if 'bowden_len' in svv %}
      {% set default_e = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set e = params.E|default(default_e)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X={x} Y={y} Z={z}
    M702 U{e}
  {% endif %}

[include webclient.cfg]

[include basic_macro.cfg]
[include macro.cfg]

[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
##### see the readme for the variable definition #####
variable_hw: {}
variable_homing: {}
variable_z_hop: 0
variable_speed: {}   
variable_probe: {}
variable_park: {}
variable_filament: {}
variable_purge: {}
variable_print_start: {}
variable_unload_sd: False
variable_prime: {}
variable_respond: {}
variable_peripheral: {}
variable_run: False
gcode:
  ###################################################################
  ##                     start of user defines                     ## 
  ## this needs to be changed for your printer                     ##
  ###################################################################
  #{% set user_z_endstop_xy = [232.0,355.0] %}  ; z Endstop position insight right profil
  {% set user_z_endstop_xy = [123.0,355.0] %}  ; z Endstop position insight left profil
  {% set user_z_endstop_hop = 10 %}           ; z hop for moves e.g homimg
  {% set user_z_home_current = 0.3 %}          ; reduced homing curent for z
  {% set user_home_accel = 1200 %}             ; reduced ACCEL for homing
  {% set user_bed_y_offset = 5 %}              ; Endstop offset to bed max y
  ##### all user defined speeds [mm/sec] #####
  {% set user_z_hop_speed = 15 %}              ; default z_hop speed
  {% set user_retract_speed = 30 %}            ; default retract/extrude speed
  {% set user_travel_speed = 300 %}            ; travel speed e.g park, dock ...
  {% set user_probe_dock_speed = 50 %}         ; dock speed for attach/dock
  {% set user_filament_load_speed = 1 %}       ; load/unload speed
  {% set user_wipe_speed = 200 %}               ; wipe move speed 
  {% set user_prime_speed = 25 %}              ; prime line speed  
  ##### Mag Probe #####
  {% set user_probe_dock_pos = [0,355] %}      ; position of the dock 
  {% set user_probe_delta_x = 30 %}            ; x offset for position before dock
  {% set user_probe_delta_y = -30 %}           ; y offset to move probe out of dock
  {% set user_z_probe_hop = 15.5 %}            ; z minimum heigh to avoid crash
  ##### Park Position #####
  {% set user_park_xy_delta = 25 %}            ; distance for x or y from the edge
  {% set user_park_z_max_delta = 40 %}         ; insure to do not hit cam in front
  {% set user_park_z_min = 30 %}               ; minimal z from bed
  {% set user_park_pause_z_delta = 2.0 %}      ; distance to increase head while PAUSE/CANCEL_PRINT
  {% set user_park_at_cancel = False %}        ; park head at CANCEL_PRINT if not paused [False/True]
  ##### Filament #####
  {% set user_extruder_min_add = 30 %}         ; Temperature add to min Extruder temp
  {% set user_load_distance = 90 %}            ; load distance while load filament
  {% set user_load_extrude = 50 %}             ; extrude distance while load filament
  {% set user_unload_distance = 75 %}          ; unload distance while unload filament
  {% set user_retract_end = 2 %}               ; retract distance at PRINT_END or CANCEL_PRINT
  {% set user_retract_pause = 1 %}             ; retract/extrude distance while PAUSE or RESUME
  ##### Purge & Brush #####
  # Old NOZZLE_CLEAN macro start x = 220, y = 247 wipe_dist = -50
  {% set user_brush_x_middle = 195 %}          ; mid point of brush at right profil
  {% set user_brush_x_width = 50 %}            ; width of brush
  {% set user_brush_y_start = 247 %}           ; start point at y
  {% set user_wipe_z = 2.0 %}                  ; z for wipe moves
  {% set user_wipe_cnt = 5 %}                  ; number of full wipes
  {% set user_z_purge = 2 %}                   ; z above purge bucket
  ##### PRINT_START/STOP #####
  {% set user_print_start_bed_up = 10 %}       ; bed temp raise for faster heat soak
  {% set user_print_start_ival = 1 %}          ; wait time per call in sec
  {% set user_print_start_extruder_time = 3 %} ; time in minutes before soak end to start extruder heating 
  {% set user_print_start_bed_time = 3 %}      ; time in minutes before soak end to set bed target temp
  {% set user_print_start_prime_mult = 2 %}    ; multiplier for prime line hight 
  {% set user_unload_sd = True %}              ; unload sd file at PRINT_END or CANCEL_PRINT [True,False]
  ##### Prime Line #####
  {% set user_prime_start_xy = [2.0,20.0] %}   ; x&y start coordinates of prime line
  {% set user_prime_z = 0.34 %}                ; default prime layer hight
  {% set user_prime_dir = 'Y+' %}              ; direction of prime line (X+, X-, Y+, Y-)
  {% set user_prime_spacing = 0.4 %}           ; distance between line, move will allways positive
  {% set user_prime_lenght = 200 %}            ; length of prime line
  {% set user_prime_seg = 11 %}                ; segments in that the prime line is splitted
  {% set user_prime_extrude_per_seg = 2 %}     ; amount of filament extruded per segment
  ##### Respond defaults #####
  # Default behaivior for output messages of the macro 0: no output 1: console output
  {% set user_respond_set_z_current = 0 %}     ; Macro: _SET_Z_CURRENT
  {% set user_respond_set_acc = 0 %}           ; Macro: _SET_ACC
  {% set user_respond_probe_action = 1 %}      ; Macro: _PROBE_ACTION
  {% set user_respond_layer = 0 %}             ; Macro: _LAYER
  ##### Peripheral #####
  {% set user_filter_on = 0.5 %}               ; filter on value
  {% set user_filter_use_time = 80 %}          ; Nevermore change warning limit 
  {% set user_vent_on = 15 %}                  ; chamber fan on temperature                        
  {% set user_caselight_on = 0.4 %}            ; caselight on value
  {% set user_fan_run_after_print = 30 %}      ; time in min to run filter and chamber exhaust after print finsih 
  ###################################################################
  ##                      end of user defines                      ## 
  ###################################################################
  # get printer limits & cfg value
  {% set min = printer.toolhead.axis_minimum %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set cfg_endstop_z_offset = printer.configfile.settings.stepper_z.position_endstop|default(0.0)|float %}
  # detect additional hardware
  {% set hw_dic = {'display'       : {'ena' : True if 'neopixel neo_display' in printer.configfile.settings 
                                         else False},
                   'chamber'       : {'type': 'sensor' if 'temperature_sensor chamber' in printer.configfile.settings
                                         else 'fan'    if 'temperature_fan chamber' in printer.configfile.settings 
                                         else 'none'},
                   'caselight'     : {'ena' : True if 'output_pin caselight' in printer.configfile.settings 
                                         else False},
                   'filter'        : {'ena' : True if 'fan_generic filter' in printer.configfile.settings 
                                         else False},
                   'runout'        : {'type': 'switch' if 'filament_switch_sensor runout' in printer.configfile.settings
                                         else 'motion' if 'filament_motion_sensor runout' in printer.configfile.settings
                                         else 'file'   if 'save_variables' in printer and filament_loaded in printer.save_variables.variables 
                                         else 'none'},
                   'relay'         : {'ena' : True if 'output_pin extruder_relay'   in printer.configfile.settings and
                                                      'output_pin heater_bed_relay' in printer.configfile.settings 
                                         else False},
                   'auto_z_offset' : {'type': 'z_calib+flexplate' if 'z_calibration' in printer and 'save_variables' in printer and 'plates' in printer.save_variables.variables
                                         else 'z_calib'           if 'z_calibration' in printer
                                         else 'flexplate'         if 'save_variables' in printer and 'plates' in printer.save_variables.variables 
                                         else 'none'},
                   'mag_probe'     : {'ena' : True if printer['gcode_macro _MAG_PROBE'] is defined or 'dockable_probe' in printer 
                                         else False},
                   'endstop_temp'  : {'ena' : True if 'temperature_sensor endstop' in printer.configfile.settings 
                                         else False}}%}
  {% set _dummy = hw_dic.chamber.update({'ena': True if hw_dic.chamber.type != 'none' else False}) %}
  {% set _dummy = hw_dic.chamber.update({'fan': True if hw_dic.chamber.type == 'fan' else False}) %}
  {% set _dummy = hw_dic.runout.update({'ena': True if hw_dic.runout.type != 'none' else False}) %}
  {% set _dummy = hw_dic.runout.update({'sensor': True if hw_dic.runout.type == 'switch' or hw_dic.runout.type == 'motion'
                                             else False}) %}
  {% set _dummy = hw_dic.auto_z_offset.update({'ena': True if hw_dic.auto_z_offset.type != 'none' else False}) %}
  {% set _dummy = hw_dic.auto_z_offset.update({'auto': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
                                                               hw_dic.auto_z_offset.type == 'z_calib'
                                                  else False}) %}
  {% set _dummy = hw_dic.auto_z_offset.update({'manu': True if hw_dic.auto_z_offset.type == 'z_calib+flexplate' or
                                                               hw_dic.auto_z_offset.type == 'flexplate'
                                                  else False}) %}
  # calc needed values
  {% set bed = {'min': {'x': min.x, 'y': min.y                    , 'z': 0    },
                'max': {'x': max.x, 'y': max.y - user_bed_y_offset, 'z': max.z}} %}
  {% set calc_center = {'x': (bed.max.x - bed.min.x) / 2,
                        'y': (bed.max.y - bed.min.y) / 2, 
                        'z': (bed.max.z - bed.min.z) / 2} %}
  {% set calc_park = {'min': {'x': bed.min.x + user_park_xy_delta,
                              'y': bed.min.y + user_park_xy_delta,
                              'z': bed.min.z + user_park_z_min},
                      'max': {'x': bed.max.x - user_park_xy_delta,
                              'y': bed.max.y - user_park_xy_delta,
                              'z': bed.max.z - user_park_z_max_delta}} %}
  {% set calc_z_endstop_z = cfg_endstop_z_offset|round(0, 'ceil') + 1.0 if cfg_endstop_z_offset > 0 else 1.0 %}
  {% set calc_z_hop = user_z_probe_hop if hw_dic.mag_probe.ena and user_z_probe_hop > user_z_endstop_hop
                 else user_z_endstop_hop %}
  {% set calc_brush = {'start': user_brush_x_middle - user_brush_x_width / 2,
                       'end'  : user_brush_x_middle + user_brush_x_width / 2} %}
  {% set calc_purge = {'x': (min.x + calc_brush.start) / 2 if user_brush_pos|lower == 'left'
                       else max.x - (max.x - calc_brush.end) / 2,
                       'y': max.y} %}
  {% set calc_wipe = {'start': {'x': calc_brush.start if user_brush_pos|lower == 'left'
                                else calc_brush.end,
                                'y': user_brush_y_start},
                      'end'  : {'x': calc_brush.end if user_brush_pos|lower == 'left'
                                else calc_brush.start,
                                'y': max.y}} %}
  # prepare dictonaries
  {% set homing_dic = {'z_endstop': {'x':user_z_endstop_xy[0], 'y':user_z_endstop_xy[1], 'z':calc_z_endstop_z, 'hop':user_z_endstop_hop},
                       'z_current': user_z_home_current,
                       'accel'    : user_home_accel} %}
  # {% set purge_dic = {'purge' : {'x':calc_purge.x, 'y':calc_purge.y, 'z':user_z_purge},
  #                     'wipe'  : {'start'  : {'x': calc_wipe.start.x, 'y': calc_wipe.start.y, 'z':user_wipe_z},
  #                                'end'    : {'x': calc_wipe.end.x,   'y': calc_wipe.end.y,   'z':user_wipe_z},
  #                                'offset' : (calc_wipe.end.y - calc_wipe.start.y) / user_wipe_cnt,
  #                                'cnt'    : user_wipe_cnt}} %}
  # Fix toolhead (xol) collision with endstop pin.
  {% set purge_dic = {'purge' : {'x':calc_purge.x, 'y':calc_purge.y, 'z':user_z_purge},
                      'wipe'  : {'start'  : {'x': calc_wipe.start.x, 'y': calc_wipe.start.y, 'z':user_wipe_z},
                                 'end'    : {'x': calc_wipe.end.x,   'y': calc_wipe.end.y,   'z':user_z_endstop_hop},
                                 'offset' : (calc_wipe.end.y - calc_wipe.start.y) / user_wipe_cnt,
                                 'cnt'    : user_wipe_cnt}} %}
  {% set probe_dic = {'dock'        : {'x'    : user_probe_dock_pos[0], 
                                       'y'    : user_probe_dock_pos[1] + user_probe_delta_y},
                      'store'       : {'x'    : user_probe_dock_pos[0] + user_probe_delta_x, 
                                       'y'    : user_probe_dock_pos[1]}} %}
  {% set speed_dic = {'z_hop'   : (user_z_hop_speed * 60),
                      'retract' : (user_retract_speed * 60),
                      'travel'  : (user_travel_speed * 60), 
                      'dock'    : (user_probe_dock_speed * 60),
                      'load'    : (user_filament_load_speed * 60),
                      'wipe'    : (user_wipe_speed * 60),
                      'prime'   : (user_prime_speed * 60)} %}
  {% set park_dic = {'bed'           : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_park.min.z},
                     'center'        : {'x': calc_center.x,   'y': calc_center.y,   'z': calc_center.z},
                     'front'         : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.max.z},
                     'frontlow'      : {'x': calc_center.x,   'y': calc_park.min.y, 'z': calc_park.min.z},
                     'rear'          : {'x': calc_park.min.x, 'y': calc_park.max.y, 'z': calc_park.max.z},
                     'pause'         : {'x': calc_purge.x,    'y': calc_purge.y,   'dz': user_park_pause_z_delta},
                     'park_at_cancel': user_park_at_cancel} %}
  {% set filament_dic = {'load_distance'   : user_load_distance,
                         'load_extrude'    : user_load_extrude,
                         'unload_distance' : user_unload_distance,
                         'retract'         : {'end'   : user_retract_end,
                                              'pause' : user_retract_pause,
                                              'cancel': user_retract_end - user_retract_pause}} %}
  {% set prime_dic = {'pos'             : {'x':user_prime_start_xy[0], 'y':user_prime_start_xy[1], 'z':user_prime_z},
                      'dir'             : user_prime_dir,
                      'spacing'         : user_prime_spacing,
                      'length_per_seg'  : user_prime_lenght / user_prime_seg,
                      'seg'             : user_prime_seg,
                      'extrude_per_seg' : user_prime_extrude_per_seg} %}
  {% set print_start_dic = {'bed_up'     : user_print_start_bed_up|float|round(1),
                            'ival'       : user_print_start_ival|int,
                            'time'       : {'extruder' : (user_print_start_extruder_time * 60)|int,
                                            'bed'      : (user_print_start_bed_time * 60)|int},
                            'prime_mult' : user_print_start_prime_mult|float} %}
  {% set respond_dic = {'z_current'    : user_respond_set_z_current, 
                        'acc'          : user_respond_set_acc, 
                        'probe_action' : user_respond_probe_action, 
                        'layer'        : user_respond_layer} %}
  {% set peripheral_dic =  {'filter'     : {'on_val'          : user_filter_on,
                                            'warning'         : user_filter_use_time,
                                            'run_after_print' : (user_fan_run_after_print * 60)},
                            'vent'      : {'on_val'          : user_vent_on,
                                           'run_after_print' : ((user_fan_run_after_print * 60) + 5)},
                            'caselight' : {'on_val' : user_caselight_on}} %}
  # store results in variable
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=hw VALUE="{hw_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=homing VALUE="{homing_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=z_hop VALUE={calc_z_hop}
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=speed VALUE="{speed_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=probe VALUE="{probe_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=park VALUE="{park_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=filament VALUE="{filament_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=purge VALUE="{purge_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=print_start VALUE="{print_start_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=unload_sd VALUE={user_unload_sd}
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=prime VALUE="{prime_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=respond VALUE="{respond_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=peripheral VALUE="{peripheral_dic}"
  SET_GCODE_VARIABLE MACRO=_USER_VARIABLE VARIABLE=run VALUE=True

[gcode_macro _EXECUTE_AT_INIT]
description: Helper: Everything that should run at klipper start
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% if user.hw.display.ena %} UPDATE_DELAYED_GCODE ID=_DISPLAY_INIT DURATION=2 {% endif %}
  _PRINT_AR T="Klipper INIT done"

[delayed_gcode _INIT]
initial_duration: 1
gcode:
  _USER_VARIABLE
  _EXECUTE_AT_INIT

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.008
#*# pid_ki = 2.774
#*# pid_kd = 243.789
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.183
#*# pid_ki = 2.485
#*# pid_kd = 110.755
#*#
#*# [probe]
#*# z_offset = 3.938
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 77.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 49.6
#*#
#*# [stepper_z]
#*# position_endstop = 6.431
#*#
#*# [bed_mesh textured-pei-h]
#*# version = 1
#*# points =
#*# 	-0.015735, -0.005735, 0.011765, 0.031765, 0.050515, 0.058015, 0.058015, 0.070515, 0.079265, 0.069265, 0.059265, 0.054265, 0.055515, 0.043015, 0.030515, 0.028015, 0.038015, 0.048015, 0.045515, 0.059265
#*# 	-0.010735, -0.006985, 0.004265, 0.029265, 0.046765, 0.056765, 0.068015, 0.071765, 0.078015, 0.073015, 0.063015, 0.054265, 0.054265, 0.055515, 0.046765, 0.036765, 0.044265, 0.054265, 0.053015, 0.064265
#*# 	-0.018235, -0.006985, 0.009265, 0.016765, 0.049265, 0.051765, 0.061765, 0.066765, 0.074265, 0.066765, 0.061765, 0.059265, 0.051765, 0.044265, 0.045515, 0.043015, 0.040515, 0.049265, 0.053015, 0.065515
#*# 	-0.016985, -0.008235, 0.003015, 0.011765, 0.039265, 0.049265, 0.058015, 0.066765, 0.069265, 0.059265, 0.059265, 0.045515, 0.045515, 0.045515, 0.029265, 0.030515, 0.048015, 0.046765, 0.058015, 0.063015
#*# 	-0.023235, -0.019485, -0.003235, 0.004265, 0.024265, 0.044265, 0.050515, 0.060515, 0.059265, 0.061765, 0.046765, 0.041765, 0.020515, 0.018015, 0.014265, 0.015515, 0.024265, 0.045515, 0.055515, 0.055515
#*# 	-0.034485, -0.024485, -0.010735, -0.000735, 0.024265, 0.038015, 0.054265, 0.051765, 0.053015, 0.049265, 0.044265, 0.031765, 0.010515, 0.008015, 0.010515, 0.004265, 0.029265, 0.039265, 0.053015, 0.056765
#*# 	-0.035735, -0.025735, -0.015735, -0.006985, 0.013015, 0.031765, 0.030515, 0.041765, 0.038015, 0.038015, 0.028015, 0.018015, 0.004265, 0.005515, 0.001765, 0.005515, 0.016765, 0.041765, 0.050515, 0.050515
#*# 	-0.046985, -0.034485, -0.019485, -0.003235, 0.010515, 0.030515, 0.045515, 0.046765, 0.043015, 0.026765, 0.015515, 0.003015, -0.003235, 0.003015, 0.001765, 0.018015, 0.033015, 0.046765, 0.048015, 0.044265
#*# 	-0.056985, -0.035735, -0.018235, -0.001985, 0.000515, 0.009265, 0.021765, 0.034265, 0.028015, 0.013015, 0.011765, -0.003235, -0.005735, -0.005735, -0.004485, -0.004485, 0.019265, 0.035515, 0.035515, 0.043015
#*# 	-0.058235, -0.036985, -0.029485, -0.011985, -0.003235, 0.003015, 0.009265, 0.014265, 0.008015, 0.000515, -0.000735, -0.003235, -0.005735, -0.009485, -0.006985, -0.003235, -0.000735, 0.013015, 0.008015, 0.034265
#*# 	-0.054485, -0.039485, -0.028235, -0.019485, -0.008235, 0.004265, 0.011765, 0.014265, 0.016765, -0.001985, -0.004485, -0.006985, -0.006985, -0.015735, -0.008235, -0.013235, -0.006985, -0.004485, 0.005515, 0.026765
#*# 	-0.053235, -0.040735, -0.024485, -0.011985, -0.006985, 0.026765, 0.004265, 0.011765, 0.006765, 0.005515, -0.008235, -0.008235, -0.010735, -0.011985, -0.010735, -0.009485, -0.006985, -0.005735, 0.001765, 0.015515
#*# 	-0.035735, -0.025735, -0.023235, -0.006985, 0.005515, 0.006765, 0.009265, 0.025515, 0.028015, 0.004265, 0.004265, -0.006985, -0.008235, -0.016985, -0.010735, -0.011985, -0.003235, 0.005515, -0.003235, 0.031765
#*# 	-0.029485, -0.021985, -0.016985, -0.003235, 0.003015, 0.011765, 0.011765, 0.026765, 0.023015, 0.008015, 0.000515, -0.001985, -0.005735, -0.004485, -0.006985, -0.009485, -0.003235, -0.003235, 0.043015, 0.034265
#*# 	-0.023235, -0.018235, -0.011985, -0.001985, 0.006765, 0.011765, 0.024265, 0.039265, 0.033015, 0.023015, 0.005515, -0.001985, 0.000515, -0.004485, -0.005735, 0.028015, 0.004265, 0.000515, 0.009265, 0.040515
#*# 	-0.023235, -0.008235, -0.008235, 0.005515, 0.024265, 0.021765, 0.041765, 0.044265, 0.030515, 0.028015, 0.015515, 0.008015, 0.004265, 0.001765, 0.000515, 0.001765, 0.001765, 0.010515, 0.038015, 0.044265
#*# 	-0.009485, 0.000515, 0.000515, 0.010515, 0.026765, 0.041765, 0.050515, 0.046765, 0.044265, 0.035515, 0.035515, 0.015515, 0.015515, 0.011765, 0.009265, 0.014265, 0.025515, 0.024265, 0.034265, 0.043015
#*# 	0.020515, 0.034265, 0.001765, 0.020515, 0.036765, 0.045515, 0.051765, 0.054265, 0.053015, 0.043015, 0.041765, 0.033015, 0.029265, 0.014265, 0.024265, 0.013015, 0.030515, 0.030515, 0.041765, 0.053015
#*# 	0.024265, 0.038015, 0.035515, 0.054265, 0.068015, 0.083015, 0.078015, 0.080515, 0.073015, 0.069265, 0.059265, 0.058015, 0.056765, 0.058015, 0.041765, 0.044265, 0.038015, 0.044265, 0.050515, 0.066765
#*# 	0.045515, 0.065515, 0.016765, 0.063015, 0.081765, 0.075515, 0.081765, 0.081765, 0.083015, 0.069265, 0.068015, 0.056765, 0.048015, 0.049265, 0.048015, 0.051765, 0.056765, 0.063015, 0.061765, 0.098015
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 242.88
#*# min_y = 25.0
#*# max_y = 236.85000000000008
#*#
#*# [bed_mesh textured-pei-cold]
#*# version = 1
#*# points =
#*# 	-0.014123, -0.030373, -0.019123, -0.006623, 0.019627, 0.018377, 0.048377, 0.058377, 0.064627, 0.053377, 0.048377, 0.027127, 0.005877, -0.002873, -0.014123, -0.036623, -0.015373, -0.021623, -0.032873, -0.021623
#*# 	-0.031623, -0.045373, -0.017873, -0.007873, 0.015877, 0.049627, 0.044627, 0.070877, 0.070877, 0.062127, 0.052127, 0.029627, 0.018377, 0.024627, 0.019627, 0.022127, 0.003377, -0.010373, -0.010373, -0.017873
#*# 	-0.019123, -0.011623, -0.012873, -0.007873, 0.005877, 0.045877, 0.057127, 0.059627, 0.067127, 0.063377, 0.048377, 0.029627, 0.022127, 0.009627, 0.008377, -0.000373, 0.000877, 0.003377, -0.004123, -0.010373
#*# 	-0.034123, -0.012873, -0.017873, -0.000373, 0.029627, 0.030877, 0.052127, 0.055877, 0.063377, 0.054627, 0.047127, 0.030877, 0.015877, 0.002127, -0.020373, -0.006623, -0.004123, -0.016623, 0.008377, 0.020877
#*# 	-0.060373, -0.025373, -0.016623, -0.012873, -0.002873, 0.037127, 0.052127, 0.048377, 0.059627, 0.052127, 0.040877, 0.019627, 0.005877, -0.006623, -0.010373, -0.019123, -0.006623, 0.002127, -0.005373, -0.009123
#*# 	-0.037873, -0.041623, -0.022873, 0.000877, 0.004627, 0.008377, 0.042127, 0.042127, 0.049627, 0.039627, 0.028377, 0.015877, -0.004123, 0.000877, -0.014123, -0.015373, -0.009123, -0.011623, -0.026623, -0.021623
#*# 	-0.052873, -0.045373, -0.021623, -0.019123, -0.001623, 0.004627, 0.018377, 0.033377, 0.032127, 0.022127, 0.004627, -0.000373, -0.011623, -0.009123, -0.019123, -0.009123, -0.025373, -0.005373, 0.000877, -0.012873
#*# 	-0.055373, -0.062873, -0.036623, -0.017873, 0.009627, 0.005877, 0.027127, 0.015877, 0.023377, 0.017127, 0.002127, -0.001623, -0.009123, -0.012873, -0.024123, -0.014123, -0.010373, -0.006623, 0.000877, -0.017873
#*# 	-0.074123, -0.061623, -0.024123, -0.025373, -0.001623, 0.003377, 0.003377, 0.015877, 0.009627, 0.002127, -0.005373, -0.001623, -0.011623, -0.009123, -0.029123, -0.032873, -0.010373, -0.022873, -0.011623, -0.020373
#*# 	-0.066623, -0.075373, -0.054123, -0.034123, -0.004123, 0.000877, 0.007127, 0.019627, 0.007127, 0.004627, -0.002873, -0.006623, -0.019123, -0.014123, -0.027873, -0.019123, -0.025373, -0.021623, -0.019123, -0.019123
#*# 	-0.072873, -0.061623, -0.026623, -0.032873, -0.006623, -0.000373, 0.000877, 0.018377, 0.023377, -0.001623, -0.009123, -0.010373, -0.015373, -0.022873, -0.026623, -0.022873, -0.027873, -0.021623, -0.027873, -0.045373
#*# 	-0.072873, -0.065373, -0.070373, -0.024123, -0.042873, -0.006623, 0.015877, 0.018377, 0.012127, 0.002127, -0.010373, -0.011623, -0.024123, -0.019123, -0.047873, -0.024123, -0.025373, -0.019123, -0.034123, -0.036623
#*# 	-0.040373, -0.052873, -0.026623, -0.020373, -0.004123, -0.019123, 0.009627, 0.020877, 0.027127, 0.013377, -0.006623, -0.005373, -0.007873, -0.034123, -0.032873, -0.024123, -0.015373, -0.027873, -0.020373, -0.029123
#*# 	-0.055373, -0.039123, -0.036623, -0.017873, -0.011623, 0.019627, 0.025877, 0.020877, 0.039627, 0.030877, 0.013377, 0.007127, -0.005373, -0.006623, -0.027873, -0.030373, -0.021623, -0.032873, -0.016623, -0.017873
#*# 	-0.025373, -0.027873, -0.015373, -0.030373, -0.000373, 0.010877, 0.012127, 0.040877, 0.024627, 0.014627, 0.020877, 0.018377, 0.002127, 0.005877, -0.006623, -0.021623, 0.002127, -0.012873, -0.007873, -0.000373
#*# 	-0.007873, -0.024123, -0.007873, 0.010877, 0.008377, 0.034627, 0.014627, 0.043377, 0.055877, 0.044627, 0.034627, 0.033377, 0.024627, 0.010877, 0.012127, 0.012127, 0.009627, -0.011623, 0.004627, 0.010877
#*# 	-0.021623, -0.015373, -0.001623, -0.000373, 0.015877, 0.050877, 0.065877, 0.065877, 0.068377, 0.053377, 0.027127, 0.019627, 0.024627, 0.007127, -0.006623, 0.027127, -0.002873, 0.020877, 0.010877, 0.010877
#*# 	-0.019123, 0.000877, -0.000373, 0.007127, 0.023377, 0.060877, 0.055877, 0.087127, 0.077127, 0.069627, 0.045877, 0.058377, 0.035877, 0.037127, 0.040877, 0.013377, 0.019627, 0.024627, 0.005877, 0.007127
#*# 	-0.006623, 0.003377, 0.018377, 0.009627, 0.039627, 0.043377, 0.084627, 0.093377, 0.089627, 0.068377, 0.077127, 0.063377, 0.043377, 0.038377, 0.035877, 0.020877, 0.032127, 0.034627, 0.015877, 0.044627
#*# 	0.089627, 0.119627, 0.054627, 0.079627, 0.120877, 0.122127, 0.124627, 0.117127, 0.110877, 0.110877, 0.088377, 0.084627, 0.079627, 0.072127, 0.075877, 0.073377, 0.077127, 0.079627, 0.079627, 0.094627
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 242.88
#*# min_y = 25.0
#*# max_y = 236.85000000000008
#*#
#*# [bed_mesh textured-pei-heatsoaked]
#*# version = 1
#*# points =
#*# 	-0.041121, -0.019871, -0.012371, 0.006379, 0.021379, 0.033879, 0.058879, 0.060129, 0.066379, 0.056379, 0.043879, 0.028879, 0.025129, 0.022629, 0.002629, 0.011379, 0.006379, 0.013879, 0.002629, 0.013879
#*# 	-0.037371, -0.027371, -0.008621, 0.002629, 0.017629, 0.032629, 0.056379, 0.060129, 0.076379, 0.065129, 0.050129, 0.042629, 0.030129, 0.022629, 0.020129, 0.022629, 0.008879, 0.012629, 0.017629, 0.028879
#*# 	-0.044871, -0.029871, -0.014871, -0.004871, 0.015129, 0.025129, 0.062629, 0.060129, 0.057629, 0.062629, 0.048879, 0.045129, 0.026379, 0.028879, 0.017629, 0.012629, 0.015129, 0.008879, 0.018879, 0.028879
#*# 	-0.047371, -0.032371, -0.021121, -0.001121, 0.007629, 0.025129, 0.041379, 0.048879, 0.062629, 0.043879, 0.043879, 0.026379, 0.026379, 0.015129, 0.013879, 0.003879, 0.013879, 0.008879, 0.021379, 0.028879
#*# 	-0.051121, -0.048621, -0.033621, -0.011121, 0.001379, 0.021379, 0.033879, 0.045129, 0.046379, 0.051379, 0.040129, 0.026379, 0.013879, 0.000129, -0.006121, -0.002371, 0.001379, 0.013879, 0.018879, 0.023879
#*# 	-0.058621, -0.052371, -0.041121, -0.012371, -0.001121, 0.016379, 0.025129, 0.031379, 0.035129, 0.028879, 0.026379, 0.015129, 0.005129, -0.001121, -0.007371, -0.003621, -0.004871, 0.005129, 0.015129, 0.026379
#*# 	-0.068621, -0.051121, -0.036121, -0.013621, -0.006121, 0.011379, 0.017629, 0.023879, 0.025129, 0.023879, 0.020129, 0.016379, 0.005129, -0.002371, -0.006121, 0.000129, -0.012371, 0.001379, 0.013879, 0.021379
#*# 	-0.069871, -0.058621, -0.047371, -0.017371, 0.002629, 0.008879, 0.020129, 0.018879, 0.021379, 0.018879, 0.003879, 0.002629, -0.002371, -0.006121, -0.011121, -0.003621, -0.009871, 0.005129, 0.011379, 0.016379
#*# 	-0.072371, -0.061121, -0.043621, -0.024871, -0.006121, 0.006379, 0.011379, 0.015129, 0.012629, 0.003879, 0.000129, 0.002629, -0.004871, -0.006121, -0.011121, -0.014871, -0.007371, -0.006121, 0.001379, 0.018879
#*# 	-0.074871, -0.064871, -0.042371, -0.028621, -0.007371, 0.002629, 0.016379, 0.016379, 0.006379, 0.007629, -0.004871, -0.004871, -0.018621, -0.018621, -0.018621, -0.018621, -0.014871, -0.003621, -0.003621, 0.013879
#*# 	-0.068621, -0.058621, -0.049871, -0.026121, -0.009871, 0.000129, 0.008879, 0.012629, 0.016379, 0.002629, -0.006121, -0.002371, -0.012371, -0.018621, -0.017371, -0.014871, -0.022371, -0.006121, 0.000129, 0.010129
#*# 	-0.063621, -0.057371, -0.042371, -0.022371, -0.004871, -0.001121, 0.007629, 0.020129, 0.016379, 0.007629, 0.010129, -0.004871, -0.011121, -0.013621, -0.018621, -0.021121, -0.013621, -0.009871, -0.001121, 0.016379
#*# 	-0.049871, -0.047371, -0.036121, -0.021121, -0.006121, 0.001379, 0.010129, 0.018879, 0.017629, 0.006379, -0.001121, 0.000129, -0.011121, -0.016121, -0.024871, -0.011121, -0.001121, -0.006121, 0.007629, 0.026379
#*# 	-0.046121, -0.038621, -0.027371, -0.002371, 0.007629, 0.015129, 0.025129, 0.023879, 0.028879, 0.022629, 0.013879, 0.010129, -0.002371, -0.002371, -0.011121, 0.001379, -0.003621, 0.011379, 0.016379, 0.023879
#*# 	-0.042371, -0.028621, -0.022371, -0.007371, 0.005129, 0.015129, 0.025129, 0.026379, 0.030129, 0.022629, 0.025129, 0.016379, 0.010129, 0.007629, 0.006379, 0.008879, 0.012629, 0.017629, 0.030129, 0.045129
#*# 	-0.031121, -0.028621, -0.009871, 0.008879, 0.013879, 0.025129, 0.032629, 0.036379, 0.036379, 0.031379, 0.023879, 0.022629, 0.018879, 0.018879, 0.015129, 0.011379, 0.017629, 0.018879, 0.030129, 0.052629
#*# 	-0.027371, -0.017371, 0.000129, 0.007629, 0.018879, 0.038879, 0.045129, 0.050129, 0.045129, 0.045129, 0.027629, 0.028879, 0.023879, 0.023879, 0.021379, 0.021379, 0.018879, 0.030129, 0.036379, 0.055129
#*# 	-0.016121, 0.007629, 0.002629, 0.012629, 0.031379, 0.041379, 0.047629, 0.062629, 0.056379, 0.046379, 0.037629, 0.037629, 0.035129, 0.028879, 0.030129, 0.033879, 0.031379, 0.042629, 0.045129, 0.061379
#*# 	-0.013621, 0.023879, 0.018879, 0.031379, 0.035129, 0.052629, 0.070129, 0.077629, 0.068879, 0.065129, 0.057629, 0.052629, 0.045129, 0.043879, 0.038879, 0.050129, 0.047629, 0.047629, 0.053879, 0.078879
#*# 	0.056379, 0.086379, 0.015129, 0.057629, 0.086379, 0.088879, 0.088879, 0.083879, 0.086379, 0.083879, 0.073879, 0.066379, 0.056379, 0.062629, 0.063879, 0.065129, 0.072629, 0.073879, 0.075129, 0.100129
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 242.88
#*# min_y = 25.0
#*# max_y = 236.85000000000008
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.026325, -0.021325, -0.002575, 0.024925, 0.044925, 0.052425, 0.064925, 0.066175, 0.069925, 0.061175, 0.048675, 0.039925, 0.037425, 0.018675, 0.004925, 0.011175, -0.002575, -0.008825, 0.014925, 0.028675
#*# 	  -0.027575, -0.010075, -0.002575, 0.031175, 0.047425, 0.051175, 0.066175, 0.077425, 0.079925, 0.064925, 0.053675, 0.041175, 0.039925, 0.027425, 0.018675, 0.018675, 0.013675, 0.018675, 0.019925, 0.038675
#*# 	  -0.031325, -0.015075, 0.046175, 0.013675, 0.029925, 0.046175, 0.059925, 0.071175, 0.069925, 0.062425, 0.053675, 0.046175, 0.033675, 0.033675, 0.021175, 0.018675, 0.027425, 0.027425, 0.027425, 0.041175
#*# 	  -0.035075, -0.023825, -0.017575, 0.059925, 0.028675, 0.043675, 0.048675, 0.061175, 0.059925, 0.063675, 0.046175, 0.041175, 0.023675, 0.016175, 0.009925, 0.018675, 0.011175, 0.027425, 0.029925, 0.036175
#*# 	  -0.038825, -0.031325, -0.016325, -0.003825, 0.007425, 0.031175, 0.042425, 0.048675, 0.054925, 0.051175, 0.036175, 0.023675, 0.022425, -0.000075, 0.006175, 0.002425, 0.009925, 0.011175, 0.017425, 0.024925
#*# 	  -0.048825, -0.041325, -0.026325, -0.010075, 0.007425, 0.029925, 0.033675, 0.041175, 0.046175, 0.043675, 0.028675, 0.017425, 0.003675, 0.012425, -0.008825, -0.003825, 0.002425, 0.004925, 0.016175, 0.033675
#*# 	  -0.058825, -0.046325, -0.030075, -0.022575, -0.006325, 0.016175, 0.024925, 0.033675, 0.028675, 0.021175, 0.012425, 0.007425, -0.001325, -0.008825, -0.011325, -0.006325, -0.007575, 0.003675, 0.008675, 0.018675
#*# 	  -0.060075, -0.037575, -0.033825, -0.018825, -0.002575, 0.006175, 0.012425, 0.037425, 0.021175, 0.019925, 0.006175, 0.003675, -0.005075, -0.005075, -0.005075, -0.007575, -0.002575, -0.002575, 0.009925, 0.019925
#*# 	  -0.071325, -0.053825, -0.037575, -0.016325, -0.006325, 0.001175, 0.007425, 0.023675, 0.009925, 0.008675, -0.002575, -0.001325, -0.012575, -0.015075, -0.010075, -0.011325, -0.007575, 0.004925, -0.001325, 0.012425
#*# 	  -0.077575, -0.062575, -0.038825, -0.027575, -0.008825, 0.004925, 0.007425, 0.013675, -0.000075, 0.001175, -0.001325, -0.012575, -0.013825, -0.012575, -0.015075, -0.020075, -0.016325, -0.005075, 0.002425, 0.013675
#*# 	  -0.072575, -0.060075, -0.043825, -0.026325, -0.015075, -0.003825, 0.004925, 0.018675, 0.007425, -0.003825, -0.006325, -0.015075, -0.013825, -0.023825, -0.018825, -0.022575, -0.017575, -0.013825, -0.001325, 0.016175
#*# 	  -0.063825, -0.051325, -0.038825, -0.023825, -0.002575, -0.005075, 0.004925, 0.011175, 0.017425, 0.008675, -0.013825, -0.012575, -0.015075, -0.015075, -0.023825, -0.020075, -0.018825, -0.018825, -0.003825, 0.011175
#*# 	  -0.052575, -0.040075, -0.030075, -0.025075, -0.006325, -0.003825, 0.007425, 0.012425, 0.021175, 0.001175, -0.006325, -0.002575, -0.015075, 0.011175, -0.020075, -0.011325, 0.004925, 0.016175, -0.000075, 0.022425
#*# 	  -0.058825, -0.043825, -0.026325, -0.012575, -0.011325, 0.002425, 0.013675, 0.028675, 0.028675, 0.006175, 0.001175, -0.003825, -0.008825, 0.008675, -0.003825, -0.010075, -0.006325, -0.003825, 0.012425, 0.038675
#*# 	  -0.047575, -0.033825, -0.022575, -0.008825, 0.002425, 0.018675, 0.032425, 0.036175, 0.027425, 0.028675, 0.006175, 0.001175, -0.000075, 0.006175, -0.007575, -0.003825, 0.002425, 0.006175, 0.014925, 0.033675
#*# 	  -0.031325, -0.021325, -0.016325, -0.005075, 0.007425, 0.024925, 0.034925, 0.039925, 0.037425, 0.022425, 0.018675, 0.017425, 0.023675, 0.006175, 0.008675, 0.009925, 0.001175, 0.016175, 0.021175, 0.041175
#*# 	  -0.028825, -0.017575, -0.002575, -0.001325, 0.016175, 0.031175, 0.044925, 0.052425, 0.036175, 0.036175, 0.023675, 0.022425, 0.013675, 0.014925, 0.014925, 0.011175, 0.027425, 0.023675, 0.033675, 0.049925
#*# 	  -0.016325, -0.011325, -0.002575, 0.007425, 0.032425, 0.046175, 0.051175, 0.059925, 0.054925, 0.044925, 0.034925, 0.033675, 0.034925, 0.029925, 0.019925, 0.029925, 0.024925, 0.029925, 0.054925, 0.058675
#*# 	  -0.003825, 0.012425, 0.016175, 0.037425, 0.054925, 0.063675, 0.067425, 0.072425, 0.068675, 0.058675, 0.054925, 0.047425, 0.041175, 0.047425, 0.036175, 0.036175, 0.038675, 0.043675, 0.044925, 0.069925
#*# 	  0.042425, 0.068675, 0.021175, 0.058675, 0.082425, 0.082425, 0.083675, 0.089925, 0.078675, 0.074925, 0.064925, 0.063675, 0.063675, 0.059925, 0.063675, 0.071175, 0.073675, 0.067425, 0.074925, 0.098675
#*# x_count = 20
#*# y_count = 20
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 242.88
#*# min_y = 25.0
#*# max_y = 236.85000000000008
