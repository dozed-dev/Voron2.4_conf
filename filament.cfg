[firmware_retraction]
retract_length: 0.75 ; length of filament (in mm) at G10/G11
unretract_extra_length: 0 ; length of additional filament (in mm) at G11
retract_speed: 50
unretract_speed: 30

#####################################################################
# 	Macro
#####################################################################

[delayed_gcode _FILAMENT_INIT]
initial_duration: 1
gcode:
  _FILAMENT_VARIABLE

[gcode_macro _FILAMENT_VARIABLE]
variable_purge: {}
variable_wipe: {}
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set brush_x_middle = 195 %}
  {% set brush_x_width = 50 %}
  # {% set brush_y_start = 247 %}
  {% set brush_y_start = 261 %}
  {% set z_purge = 2 %}
  {% set wipe_cnt = 5 %} 
  {% set wipe_z = 2 %}    

  {% set min = printer.toolhead.axis_minimum %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set calc_brush = {'start': brush_x_middle - brush_x_width / 2, 'end': brush_x_middle + brush_x_width / 2} %}
  {% set calc_wipe = {'start': {'x': calc_brush.end, 'y': brush_y_start}, 'end': {'x': calc_brush.start, 'y': max.y}} %}
  {% set calc_purge = {'x': max.x - (max.x - calc_brush.end) / 2, 'y': max.y} %}
  {% set purge_dic = {'x': calc_purge.x, 'y': calc_purge.y, 'z': z_purge} %}
  {% set wipe_dic = {
      'start': {'x': calc_wipe.start.x, 'y': calc_wipe.start.y, 'z': wipe_z},
      'end': {'x': calc_wipe.end.x, 'y': calc_wipe.end.y, 'z': user.z_hop},
      'offset': (calc_wipe.end.y - calc_wipe.start.y) / wipe_cnt,
      'cnt': wipe_cnt
  } %}
  
  SET_GCODE_VARIABLE MACRO=_FILAMENT_VARIABLE VARIABLE=purge VALUE="{purge_dic}"
  SET_GCODE_VARIABLE MACRO=_FILAMENT_VARIABLE VARIABLE=wipe VALUE="{wipe_dic}"

[gcode_macro LOAD_FILAMENT]
variable_load_distance: 80
variable_purge_distance: 25
gcode:
    {% set user = printer['gcode_macro _USER_VARIABLE'] %}
    {% set filament = printer['gcode_macro _FILAMENT_VARIABLE'] %}
    {% set purge_bucket = filament.purge %}
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    {% set min_extrude_temp = printer.configfile.settings.extruder.min_extrude_temp + 10 %}
    SAVE_GCODE_STATE NAME=load_state
    _CG28
    G90
    G1 X{purge_bucket.x} Y{purge_bucket.y} F{user.speed.travel} # move to purge bucket
    G1 Z{purge_bucket.z} F{user.speed.z_hop}   
    {action_respond_info("Current extruder temp: %s" % printer)}
    {% if printer.extruder.temperature < min_extrude_temp %}
      {action_respond_info("Extruder Temp to low heat to %3.1f°C" % min_extrude_temp)}
      M109 S{min_extrude_temp}
    {% endif %}
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    _WIPE
    M109 S{printer.extruder.target}
    RESTORE_GCODE_STATE NAME=load_state
 
[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 80
variable_purge_distance: 25
gcode:
    {% set user = printer['gcode_macro _USER_VARIABLE'] %}
    {% set filament = printer['gcode_macro _FILAMENT_VARIABLE'] %}
    {% set purge_bucket = filament.purge %}
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}
    {% set min_extrude_temp = printer.configfile.settings.extruder.min_extrude_temp + 10 %}
    SAVE_GCODE_STATE NAME=unload_state
    _CG28
    G90
    G1 X{purge_bucket.x} Y{purge_bucket.y} F{user.speed.travel} # move to purge bucket
    G1 Z{purge_bucket.z} F{user.speed.z_hop} 
    {% if printer.extruder.temperature < min_extrude_temp %}
      {action_respond_info("Extruder Temp to low heat to %3.1f°C" % min_extrude_temp)}
      M109 S{min_extrude_temp}
    {% endif %}
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    _WIPE
    M109 S{printer.extruder.target}
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro NOZZLECLEAN]
description: Move to bucket and purge and scrub nozzle
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set filament = printer['gcode_macro _FILAMENT_VARIABLE'] %}
  {% set purge_bucket = filament.purge %}
  {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
  {% set min_extrude_temp = printer.configfile.settings.extruder.min_extrude_temp + 10 %}
  SET_GCODE_OFFSET Z=0.0
  _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
  _CG28                                     ; home if not already homed
  G90                                       ; absolute positioning
  G1 Z{move_z} F10                ; move head up
  G1 X{purge_bucket.x} Y{purge_bucket.y} F{user.speed.travel} ; move to purge bucket location
  G1 Z{purge_bucket.z} F{user.speed.z_hop}           ; lower Z
  {% if printer.extruder.temperature < min_extrude_temp %}
      {action_respond_info("Extruder Temp to low heat to %3.1f°C" % min_extrude_temp)}
      M109 S{min_extrude_temp}
  {% endif %}
  G92 E0                               ; reset Extruder
  M83                                  ; relative extrusion
  M106 S64 
  G1 E2 F500                           ; purge filament
  G1 E2 F800                           ; purge filament
  G1 E-1 F800                          ; retract filament
  G4 P500
  _WIPE
  M109 S{printer.extruder.target} ; restore old extruder temperature
  M106 S0
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
  {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
  SET_GCODE_OFFSET Z={printer.gcode_move.homing_origin.z} MOVE=1

[gcode_macro _WIPE]
description: Helper: Wipe nozzle at bucket
gcode: 
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set filament = printer['gcode_macro _FILAMENT_VARIABLE'] %}
  {% set wipe = filament.wipe %}
  G90 ; absolute positioning
  G0 X{wipe.start.x} Y{wipe.start.y} Z{wipe.start.z} F{user.speed.wipe}
  {% for moves in range(0, wipe.cnt) %} ; move head diagonal to brush
    {% for coordinate in [wipe.start.x, wipe.end.x] %}
      G0 X{coordinate} Y{wipe.start.y + wipe.offset * moves} F12000
    {% endfor %}
  {% endfor %}
  G0 X{wipe.end.x} Y{wipe.end.y} Z{wipe.end.z}
  
[gcode_macro PRIME_LINE]
description: Purge nozzle at defined position
gcode:
  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  {% set prime = user.prime %}
  {% set prime_height = params.PRIME_HEIGHT|default(prime.pos.z) %}     ; get parameter or set default
  ; {% set move_z = [user.z_hop,printer.toolhead.position.z]|float %} ; calc movement high
  {% set move_z = [user.z_hop,printer.toolhead.position.z]|max %} ; calc movement high
  {% if prime.dir|string == 'X+' %}
    {% set first_line = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'Y%s' % prime.spacing %}
  {% elif prime.dir|string == 'X-' %}
    {% set first_line = 'X-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line = 'X%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'Y%s' % prime.spacing %}
  {% elif prime.dir|string == 'Y+' %}
    {% set first_line = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'X%s' % prime.spacing %}
  {% elif prime.dir|string == 'Y-' %}
    {% set first_line = 'Y-%s E%s F%s' % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set second_line = 'Y%s E%s F%s'  % (prime.length_per_seg, prime.extrude_per_seg, user.speed.prime) %}
    {% set move_to_side = 'X%s' % prime.spacing %}
  {% else %}
    {action_raise_error("_USER_VARIABLE.prime.dir is not spezified as X+, X-, Y+ or Y-")}
  {% endif %} 
  _PRINT_AR T="Prime Line" SHOW_LCD=true
  _CG28                                                 ; home if not already homed
  G92 E0                                                ; reset Extruder
  G90                                                   ; absolute positioning
  G1 Z{move_z} F{user.speed.z_hop}                      ; move head up
  G1 X{prime.pos.x} Y{prime.pos.y} F{user.speed.travel} ; move to start position
  G1 Z{prime_height} F{user.speed.z_hop}                ; move Z Axis down
  G91                                                   ; relative positioning
  {% for segment in range(prime.seg|int) %}             ; draw the first line
    G1 {first_line}
  {% endfor %}    
  G1 {move_to_side}                                     ; move to side
  {% for segment in range(prime.seg|int) %}             ; draw the second line
    G1 {second_line}
  {% endfor %}
  G92 E0                                              ; reset Extruder
  {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %} ; set it back to relative
  {% if printer.gcode_move.absolute_extrude %}         M82 {% endif %} ; set it back to absolute
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1